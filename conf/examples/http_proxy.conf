// shell> ./gorox -config conf/examples/http_proxy.conf

// NOTE: this is an HTTP reverse proxy configuration!
// For forward proxy, see "socks_proxy.conf" and "tunnel_proxy.conf".

stage {
	httpxServer "main" {
		.address = ":80"
		.webapps = ("http-proxy")
	}
	/*
	httpxServer "safe" {
		.address = ":443"
		.tlsMode = true // certificate files and private keys are set in webapps
		.webapps = ()   // add "http-proxy" if needed. remember to set certificate file and private key file in webapp
	}
	*/

	webapp "http-proxy" {
		.hostnames = ("*")
		#.tlsCertificate = "" // set this if TLS was used
		#.tlsPrivateKey  = "" // set this if TLS was used
		rule { // matches all requests
			httpProxy {
				.toBackend = "h1b"
				#.hostname = ""  // set this if backend's hostname is different with requested hostname
				#.colonport = "" // set this if backend's colonport is different with requested colonport
			}
		}
	}

	http1Backend "h1b" {
		.balancer = "roundRobin"
		node {
			.address = "192.168.0.1:3080"
		}
		/*
		node {
			.address = "192.168.0.2:3080"
		}
		*/
	}
}
