// For develop only. Create and use your own config file if you are a committer.

stage {
	// fixtures
	http1Outgate {}
	http2Outgate {}
	http3Outgate {}
	quicOutgate {}
	tcpsOutgate {}
	tudsOutgate {}
	udpsOutgate {}

	// backends
	tcpsBackend "tb1" {
		.nodes = (
			["address": "127.0.0.1:3306", "weight": 1],
		)
	}
	tcpsBackend "tb2" {
		.balancer = "random"
		.nodes    = (
			["address": "127.0.0.1:9000", "weight": 1],
			["address": "127.0.0.1:9001", "weight": 2],
			["address": "127.0.0.1:9002", "weight": 3],
		)
	}
	http1Backend "h1b1" {
		.balancer          = "roundRobin"
		.aliveTimeout      = 4s
		.maxStreamsPerConn = 1000
		.nodes             = (
			["address": "127.0.0.1:3080", "weight": 9, "keepConns": 2],
			["address": "127.0.0.1:3080", "weight": 8, "keepConns": 3],
		)
	}

	// meshers
	quicMesher "quic1" {
		.address = ":8877"
	}
	tcpsMesher "tcps1" {
		.address = ":8899"
		/*
		case $srcHost == "192.168.1.2" {
			fooEditor {}
		}
		case {
			tcpsProxy {
				.toBackend = "tb1"
			}
		}
		*/
	}
	udpsMesher "udps1" {
		.address = ":8866"
	}

	// staters
	localStater "ls1" {
	}

	// cachers
	localCacher "lc1" {
	}

	// apps
	app "testee" {
		.hostnames = ("*")
		.webRoot   = %baseDir + "/apps/testee/root"

		// rules
		rule $hostname == ("hello.gorox.net") {
			http1Proxy {
				.toBackend  = "h1b1"
				.withCacher = "lc1"
				.hostname   = ""      // if empty, will use $hostname
				.colonPort  = ":3080" // if empty, will use $colonPort
				.bufferServerContent = false
				.delRequestHeaders = ("header1", "header2")
				.addRequestHeaders = (
					("field1", "value1"),
					("field2", "value2"),
				)
				.delResponseHeaders = ("header3", "header4")
				.addResponseHeaders = (
					("field3", "value3"),
					("field4", "value4")
				)
			}
		}
		rule $hostname == "127.0.0.1" {
			http1Proxy {
				.toBackend = "h1b1"
				#.bufferClientContent = false
				.bufferServerContent = false
			}
		}

		rule $path == "/favicon.ico" {
			favicon {}
		}
		rule $path == "/xx" {
			.returnCode = 200
			.returnText = "bye bye"
		}
		rule $path == "/fcgi" {
			fcgiProxy {
				.toBackend = "tb2"
			}
		}

		rule {
			testeeHandlet {}
		}
	}

	// svcs
	svc "testee" {
		#.aa = "bb"
	}

	// servers
	httpxServer "main" {
		.forApps           = ("testee")
		.address           = ":4080"
		.numGates          = 2
		.maxConnsPerGate   = 10000
		.maxStreamsPerConn = 10000
		.readTimeout       = 60s
		.writeTimeout      = 60s
		.enableTCPTun      = false
		.enableUDPTun      = false
		.tlsMode           = false
		.enableHTTP2       = false
		.h2cMode           = false
	}
	echoServer "echo" {
		.address = ":4007"
	}

	// cronjobs
}
