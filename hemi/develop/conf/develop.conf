stage {
	.logFile = %logsDir + "/develop-worker.log"

	// fixtures
	http1 {}
	http2 {}
	http3 {}
	quic {}
	tcps {}
	udps {}
	unix {}

	// backends
	tcpsBackend "t1b" {
		.nodes = (
			["address": "127.0.0.1:3306", "weight": 1],
		)
	}
	tcpsBackend "t2b" {
		.balancer = "random"
		.nodes    = (
			["address": "127.0.0.1:9000", "weight": 1],
			["address": "127.0.0.1:9000", "weight": 2],
			["address": "127.0.0.1:9000", "weight": 1],
		)
	}
	http1Backend "h1b" {
		.balancer          = "roundRobin"
		.idleTimeout       = 4s
		.maxStreamsPerConn = 1000
		.nodes             = (
			["address": "127.0.0.1:3080", "weight": 9, "keepConns": 2],
			["address": "127.0.0.1:3080", "weight": 8, "keepConns": 3],
		)
	}

	// meshers
	quicMesher "quic1" {
		.address = ":8877"
	}
	tcpsMesher "tcps1" {
		.address = ":8899"
		/*
		case $srcHost == "192.168.1.2" {
			fooEditor {}
		}
		case {
			tcpsProxy {
				.toBackend = "t1b"
			}
		}
		*/
	}
	udpsMesher "udps1" {
		.address = ":8866"
	}

	// staters
	localStater "ls1" {
	}

	// cachers
	localCacher "lc1" {
	}

	// apps
	<apps/testee/app.conf>
	<apps/diogin/app.conf>

	// svcs
	<svcs/testee/svc.conf>
	<svcs/diogin/svc.conf>

	// servers
	httpxServer "main" {
		.forApps           = ("testee", "diogin")
		.forSvcs           = ("testee", "diogin")
		.address           = ":4080"
		.numGates          = 2
		.maxConnsPerGate   = 10000
		.maxStreamsPerConn = 10000
		.readTimeout       = 60s
		.writeTimeout      = 60s
		.enableTCPTun      = false
		.enableUDPTun      = false
		.tlsMode           = false
		.enableHTTP2       = false
		.h2cMode           = false
	}
	echoServer "echo" {
		.address = ":4007"
	}

	// cronjobs
}
